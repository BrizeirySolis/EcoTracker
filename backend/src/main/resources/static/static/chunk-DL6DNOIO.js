import{Aa as I,a as g,b as f,c as h,e as b,h as n,i as s,k as c,n as d,q as B,t as v,za as A}from"./chunk-22ZNRLWF.js";var S={plantacion:[{nombre:"especie",etiqueta:"Especie de \xE1rbol",tipo:"texto",requerido:!0,placeholder:"Ej. Pino, Encino, Sauce"},{nombre:"cantidad",etiqueta:"Cantidad plantada",tipo:"numero",requerido:!0}],reciclaje:[{nombre:"material",etiqueta:"Tipo de material",tipo:"seleccion",opciones:["Pl\xE1stico","Papel","Vidrio","Metal","Electr\xF3nicos","Otro"],requerido:!0},{nombre:"cantidad",etiqueta:"Cantidad aproximada (kg)",tipo:"numero",requerido:!1}],limpieza:[{nombre:"ubicacion",etiqueta:"Lugar de limpieza",tipo:"texto",requerido:!0,placeholder:"Ej. Parque municipal, Playa, R\xEDo"},{nombre:"area",etiqueta:"\xC1rea cubierta (m\xB2)",tipo:"numero",requerido:!1}],educacion:[{nombre:"audiencia",etiqueta:"Tipo de audiencia",tipo:"texto",requerido:!0,placeholder:"Ej. Estudiantes, Comunidad, Empleados"},{nombre:"participantes",etiqueta:"N\xFAmero de participantes",tipo:"numero",requerido:!1}]},D={plantacion:"Plantaci\xF3n",reciclaje:"Reciclaje",conservacion:"Conservaci\xF3n",educacion:"Educaci\xF3n Ambiental",ahorro:"Ahorro Energ\xE9tico",consumo:"Consumo Responsable",limpieza:"Limpieza Ambiental",otro:"Otro"};var E=class l{constructor(e){this.http=e}API_URL="http://localhost:8080/api/bitacoras";bitacorasSubject=new b([]);bitacoras$=this.bitacorasSubject.asObservable();dataLoaded=!1;getCategorias(){return this.http.get(`${this.API_URL}/categorias`).pipe(c(e=>(console.error("Error fetching categor\xEDas:",e),new h(t=>{t.next(D),t.complete()}))))}getAllBitacoras(e=!1,t){if(console.log("BitacoraService: Solicitando bit\xE1coras, forzarRefresh:",e,"categor\xEDa:",t),this.dataLoaded&&!e&&!t)return this.bitacoras$;let i=new A;return t&&(i=i.set("categoria",t)),this.http.get(this.API_URL,{params:i}).pipe(s(a=>{let r=this.processBitacorasDateFields(a);return console.log("BitacoraService: Respuesta del servidor procesada, total bit\xE1coras:",r.length),console.log("BitacoraService: Ejemplo de la primera bit\xE1cora (si existe):",r.length>0?{id:r[0].id,titulo:r[0].titulo,fecha_tipo:typeof r[0].fecha,fecha_valor:r[0].fecha}:"No hay bit\xE1coras"),r}),c(a=>(console.error("Error fetching bit\xE1coras:",a),n(()=>new Error("Failed to load bit\xE1coras. Please try again later.")))))}getBitacoraById(e){if(e==null||isNaN(e)||e<=0)return console.error("ID de bit\xE1cora inv\xE1lido:",e,typeof e),n(()=>new Error("ID de bit\xE1cora inv\xE1lido"));let t=Number(e);return console.log("BitacoraService: Solicitando bit\xE1cora por ID:",t,typeof t),this.http.get(`${this.API_URL}/${t}`).pipe(s(i=>(console.log("BitacoraService: Bit\xE1cora obtenida del servidor:",i?.id,typeof i?.id),this.processBitacoraDateFields(i))),c(i=>(console.error(`Error fetching bit\xE1cora ID ${t}:`,i),n(()=>new Error("No se pudo cargar la bit\xE1cora solicitada. Por favor, intente de nuevo m\xE1s tarde.")))))}createBitacora(e,t,i){let a=new FormData;return a.append("titulo",e.titulo),e.descripcion&&a.append("descripcion",e.descripcion),a.append("fecha",i||e.fecha.toISOString()),a.append("categoria",e.categoria),e.camposAdicionales&&a.append("camposAdicionales",JSON.stringify(e.camposAdicionales)),t&&a.append("imagen",t),this.http.post(this.API_URL,a).pipe(s(r=>this.processBitacoraDateFields(r)),d(r=>{let o=this.bitacorasSubject.value;this.bitacorasSubject.next([r,...o])}),c(r=>(console.error("Error creating bit\xE1cora:",r),n(()=>new Error("Failed to create bit\xE1cora. Please try again later.")))))}updateBitacora(e,t,i,a){let r=new FormData;return r.append("titulo",t.titulo),t.descripcion&&r.append("descripcion",t.descripcion),r.append("fecha",a||t.fecha.toISOString()),r.append("categoria",t.categoria),t.camposAdicionales&&r.append("camposAdicionales",JSON.stringify(t.camposAdicionales)),i&&r.append("imagen",i),this.http.put(`${this.API_URL}/${e}`,r).pipe(s(o=>this.processBitacoraDateFields(o)),d(o=>{let u=this.bitacorasSubject.value,m=u.findIndex(p=>p.id===o.id);if(m!==-1){let p=[...u];p[m]=o,this.bitacorasSubject.next(p)}}),c(o=>(console.error(`Error updating bit\xE1cora ID ${e}:`,o),n(()=>new Error("Failed to update bit\xE1cora. Please try again later.")))))}deleteBitacora(e){return this.http.delete(`${this.API_URL}/${e}`).pipe(d(()=>{let i=this.bitacorasSubject.value.filter(a=>a.id!==e);this.bitacorasSubject.next(i)}),c(t=>(console.error(`Error deleting bit\xE1cora ID ${e}:`,t),n(()=>new Error("Failed to delete bit\xE1cora. Please try again later.")))))}getImageUrl(e){return e?e.startsWith("http")?e:`http://localhost:8080/bitacoras-images/${e}`:""}processBitacoraDateFields(e){console.log("processBitacoraDateFields - ID antes de procesar:",e?.id,typeof e?.id);let t;return e?.id!==void 0&&e?.id!==null&&(t=Number(e.id),isNaN(t)&&(console.warn("ID de bit\xE1cora no es un n\xFAmero v\xE1lido:",e.id,typeof e.id),t=void 0)),console.log("processBitacoraDateFields - ID despu\xE9s de procesar:",t,typeof t),f(g({},e),{id:t,fecha:e.fecha?new Date(e.fecha):new Date,createdAt:e.createdAt?new Date(e.createdAt):void 0})}processBitacorasDateFields(e){return e.map(t=>this.processBitacoraDateFields(t))}static \u0275fac=function(t){return new(t||l)(v(I))};static \u0275prov=B({token:l,factory:l.\u0275fac,providedIn:"root"})};export{S as a,D as b,E as c};
