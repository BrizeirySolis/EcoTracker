import{a as $,b as C}from"./chunk-EENQT4EC.js";import{Ra as E,Sa as S,a as m,b as f,e as v,f as h,g as M,i as p,j as s,k as n,l as b,n as o,r as c,u as g,x as d}from"./chunk-HBL3S35I.js";var I=class u{constructor(e,t){this.http=e;this.authService=t}API_URL=`${$.apiUrl}/metas`;metasSubject=new M([]);filteredMetasCache={};metas$=this.metasSubject.asObservable();dataLoaded=!1;consumptionUpdatedSource=new h;consumptionUpdated$=this.consumptionUpdatedSource.asObservable();metaCompletedSource=new h;metaCompleted$=this.metaCompletedSource.asObservable();notifyConsumptionUpdated(e){this.consumptionUpdatedSource.next(e)}notifyMetaCompleted(e){e.estado==="completada"&&(this.metaCompletedSource.next(e),this.authService.invalidateScoreCache(),this.authService.getUserScore().subscribe({next:t=>{this.authService.updateUserScore(t.puntuacion),console.log(`\xA1Meta completada! Nueva puntuaci\xF3n: ${t.puntuacion}`)},error:t=>{console.error("Error al actualizar puntuaci\xF3n tras completar meta:",t)}}))}refreshMultipleMetas(e){if(!e||e.length===0)return p([]);let t=e.map(r=>this.refreshMetaProgress(r.id).pipe(o(a=>(console.error(`Error al actualizar meta ${r.id}:`,a),p(r)))));return b(t)}getAllMetas(e=!1,t){if(t&&t!==""){if(!e&&this.filteredMetasCache[t])return new v(a=>{a.next(this.filteredMetasCache[t]),a.complete()});let r=new E().set("tipo",t);return this.http.get(this.API_URL,{params:r}).pipe(n(a=>this.processMetasDateFields(a)),c(a=>{this.filteredMetasCache[t]=a}),o(a=>(console.error("Error fetching filtered metas:",a),s(()=>new Error("Error al cargar las metas. Por favor, int\xE9ntalo de nuevo.")))))}else return this.dataLoaded&&!e?this.metas$:this.http.get(this.API_URL).pipe(n(r=>this.processMetasDateFields(r)),c(r=>{this.metasSubject.next(r),this.dataLoaded=!0}),o(r=>(console.error("Error fetching all metas:",r),s(()=>new Error("Error al cargar las metas. Por favor, int\xE9ntalo de nuevo.")))))}getMetaById(e){return e===void 0||isNaN(e)||e<=0?(console.error("ID de meta inv\xE1lido:",e),s(()=>new Error("ID de meta inv\xE1lido. Por favor, intente nuevamente con un ID v\xE1lido."))):this.http.get(`${this.API_URL}/${e}`).pipe(n(t=>this.processMetaDateFields(t)),o(t=>(console.error(`Error fetching meta ID ${e}:`,t),s(()=>new Error("Error al cargar la meta solicitada. Por favor, int\xE9ntalo de nuevo.")))))}createMeta(e){return this.http.post(this.API_URL,e).pipe(n(t=>this.processMetaDateFields(t)),c(t=>{let r=this.metasSubject.value;this.metasSubject.next([t,...r]),this.filteredMetasCache={}}),o(t=>(console.error("Error creating meta:",t),s(()=>new Error("Error al crear la meta. Por favor, int\xE9ntalo de nuevo.")))))}updateMeta(e,t){return this.http.put(`${this.API_URL}/${e}`,t).pipe(n(r=>this.processMetaDateFields(r)),c(r=>{let a=this.metasSubject.value,l=a.findIndex(i=>i.id===r.id);if(l!==-1){let i=[...a];i[l]=r,this.metasSubject.next(i)}this.filteredMetasCache={}}),o(r=>(console.error(`Error updating meta ID ${e}:`,r),s(()=>new Error("Error al actualizar la meta. Por favor, int\xE9ntalo de nuevo.")))))}updateMetaProgress(e,t){return this.http.patch(`${this.API_URL}/${e}/progreso`,{valorActual:t}).pipe(n(r=>this.processMetaDateFields(r)),c(r=>{let a=this.metasSubject.value,l=a.findIndex(i=>i.id===r.id);if(l!==-1){let i=[...a];i[l]=r,this.metasSubject.next(i)}this.filteredMetasCache={},this.notifyMetaCompleted(r)}),o(r=>(console.error(`Error updating meta progress ${e}:`,r),s(()=>new Error("Error al actualizar el progreso. Por favor, int\xE9ntalo de nuevo.")))))}deleteMeta(e){return this.http.delete(`${this.API_URL}/${e}`).pipe(c(()=>{let r=this.metasSubject.value.filter(a=>a.id!==e);this.metasSubject.next(r),this.filteredMetasCache={}}),o(t=>(console.error(`Error deleting meta ID ${e}:`,t),s(()=>new Error("Error al eliminar la meta. Por favor, int\xE9ntalo de nuevo.")))))}processMetaDateFields(e){return f(m({},e),{fechaInicio:e.fechaInicio?new Date(e.fechaInicio):new Date,fechaFin:e.fechaFin?new Date(e.fechaFin):new Date,createdAt:e.createdAt?new Date(e.createdAt):void 0})}processMetasDateFields(e){return e.map(t=>this.processMetaDateFields(t))}resetCache(){this.dataLoaded=!1,this.filteredMetasCache={}}getMetaRecommendations(e){return this.http.get(`${this.API_URL}/recomendaciones/${e}`).pipe(o(t=>(console.error(`Error fetching recommendations for ${e}:`,t),s(()=>new Error("Error al obtener recomendaciones. Utilizando valores predeterminados.")))))}refreshMetaProgress(e){return this.http.get(`${this.API_URL}/${e}/refresh`).pipe(n(t=>this.processMetaDateFields(t)),c(t=>{this.resetCache(),this.notifyMetaCompleted(t)}),o(t=>(console.error(`Error refreshing meta progress ${e}:`,t),s(()=>new Error("Error al actualizar el progreso. Por favor, int\xE9ntalo de nuevo.")))))}refreshAllMetas(e){let t=`${this.API_URL}/refresh-all`;return e&&e!==""&&(t+=`?tipo=${e}`),this.http.get(t)}static \u0275fac=function(t){return new(t||u)(d(S),d(C))};static \u0275prov=g({token:u,factory:u.\u0275fac,providedIn:"root"})};export{I as a};
